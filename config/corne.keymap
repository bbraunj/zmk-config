
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
  &kp TAB         &kp Q        &kp W   &kp F     &kp P        &kp B                &kp J           &kp L          &kp U        &kp Y  &kp SEMICOLON  &kp BACKSPACE
  &kp ESC  &mt LSHIFT A  &mt LCTRL R   &kp S     &kp T        &kp G                &kp M           &kp N          &kp E  &mt RCTRL I   &mt RSHIFT O       &kp APOS
 &kp LALT         &kp Z        &kp X   &kp C     &kp D        &kp V                &kp K           &kp H      &kp COMMA      &kp DOT       &kp FSLH       &kp LALT
                                       &mo 4  &kp LCMD  &lt 2 ENTER            &kp BACKSPACE &mt RCMD SPACE  &lt 1 TAB
            >;
        };

        layer_layer_raise {
            bindings = <
 &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5              &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &kp LEFT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
 &trans  &trans  &trans  &trans  &trans  &trans              &trans    &trans    &trans  &trans     &trans  &trans
                         &trans  &trans  &trans              &trans    &trans    &trans
            >;
        };

        layer_layer_lower {
            bindings = <
 &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT            &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans
 &trans    &trans  &trans    &trans    &trans     &trans            &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
 &trans    &trans  &trans    &trans    &trans     &trans            &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans     &trans               &LC(B)     &trans        &trans
            >;
        };

        layer_layer_numpad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
                         &trans  &trans  &trans            &trans  &trans  &trans
            >;
        };

        layer_layer_navigation {
            bindings = <
 &trans  &trans  &trans         &trans       &trans  &trans            &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
 &trans  &trans  &trans  &kp PAGE_DOWN  &kp PAGE_UP  &trans                  &kp LEFT          &kp DOWN      &kp UP   &kp RIGHT        &trans        &trans
 &trans  &trans  &trans         &trans       &trans  &trans                    &trans            &trans      &trans      &trans        &trans        &trans
                                &trans       &trans  &trans                    &trans            &trans      &trans
            >;
        };

    };
};
